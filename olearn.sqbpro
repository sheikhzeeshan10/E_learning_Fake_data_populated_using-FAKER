<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="/home/administrator/Documents/work/Done files/olearn.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure pragmas browser query" current="2"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="2541"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,15:mainEmployers_Users"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Course" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="86"/><column index="2" value="300"/><column index="3" value="90"/><column index="4" value="69"/><column index="5" value="108"/><column index="6" value="300"/><column index="7" value="246"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Employers_Users" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="60"/><column index="2" value="139"/><column index="3" value="145"/><column index="4" value="121"/><column index="5" value="104"/><column index="6" value="91"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">CREATE TABLE &quot;Employers_Users&quot; (
	&quot;User_ID&quot;	INTEGER NOT NULL UNIQUE,
	&quot;Employer_Number&quot;	INTEGER NOT NULL UNIQUE,
	&quot;Creation_date&quot;	TEXT NOT NULL,
	&quot;Username&quot;	TEXT NOT NULL UNIQUE,
	&quot;Password&quot;	TEXT NOT NULL,
	&quot;Level&quot;	INTEGER NOT NULL,
	PRIMARY KEY(&quot;User_ID&quot; AUTOINCREMENT)
)



drop table Platform
	
CREATE TABLE &quot;Platform&quot; (
	&quot;Platform_ID&quot;	TEXT,
	&quot;Course&quot;	TEXT,
	&quot;Platform_Name&quot;	TEXT NOT NULL,
	&quot;Hyperlink_Path&quot;	TEXT NOT NULL,
	PRIMARY KEY(&quot;Platform_ID&quot;)
);



CREATE TABLE &quot;Course&quot; (
	&quot;Course_ID&quot;	INTEGER NOT NULL,
	&quot;Course_Name&quot;	TEXT NOT NULL,
	&quot;Platform_ID&quot;	INTEGER NOT NULL,
	&quot;Duration&quot;	TEXT NOT NULL,
	&quot;Creation_Date&quot;	TEXT NOT NULL,
	&quot;Tags&quot;	TEXT,
	&quot;Photo&quot;	TEXT,
	PRIMARY KEY(&quot;Course_ID&quot; AUTOINCREMENT),
	FOREIGN KEY(&quot;Platform_ID&quot;) REFERENCES &quot;Platform&quot;(&quot;Platform_ID&quot;)
)




 --	FOREIGN KEY(&quot;platform_ID&quot;) REFERENCES 
drop table Review

CREATE TABLE &quot;Review&quot; (
	&quot;User_ID&quot;	INTEGER NOT NULL,
	&quot;Course_ID&quot;	INTEGER NOT NULL,
	&quot;Feedback&quot;	TEXT,
	&quot;Like/Dislike&quot;	INTEGER COLLATE BINARY,
	&quot;Ranking_Score&quot;	INTEGER,
	FOREIGN KEY(&quot;User_ID&quot;) REFERENCES &quot;Employers_Users&quot;(&quot;User_ID&quot;)
)


drop TABLE &quot;Review&quot;

CREATE TABLE &quot;Review&quot; (
	&quot;User_ID&quot;	INTEGER NOT NULL,
	&quot;Course_ID&quot;	TEXT NOT NULL,
	&quot;Feedback&quot;	TEXT,
	&quot;Like_Dislike&quot;	TEXT,
	&quot;Ranking_Score&quot;	INTEGER,
	FOREIGN KEY(&quot;User_ID&quot;) REFERENCES &quot;Employers_Users&quot;(&quot;User_ID&quot;),
	FOREIGN KEY(&quot;Course_ID&quot;) REFERENCES &quot;Course&quot;(&quot;Course_ID&quot;)
);



--FOREIGN KEY(&quot;user_ID&quot;) REFERENCES 


CREATE TABLE &quot;Ongoing_Training&quot; (
	&quot;Training_ID&quot;	INTEGER NOT NULL,
	&quot;User_ID&quot;	INTEGER NOT NULL,
	&quot;Course_ID&quot;	INTEGER NOT NULL,
	&quot;Status&quot;	TEXT NOT NULL,
	&quot;Completion_Percentage&quot;	TEXT,
	&quot;Start_Date&quot;	TEXT NOT NULL,
	&quot;Finish_Date&quot;	TEXT,
	&quot;Last_Update&quot;	TEXT,
	FOREIGN KEY(&quot;User_ID&quot;) REFERENCES &quot;Employers_Users&quot;(&quot;User_ID&quot;),
	FOREIGN KEY(&quot;Course_ID&quot;) REFERENCES &quot;Course&quot;(&quot;Course_ID&quot;),
	PRIMARY KEY(&quot;Training_ID&quot; AUTOINCREMENT)
);







CREATE TABLE &quot;Pictures&quot; (
	&quot;Course_ID&quot;	INTEGER NOT NULL,
	&quot;Platform_ID&quot;	INTEGER NOT NULL,
	&quot;Image_Object&quot;	BLOB,
	FOREIGN KEY(&quot;Course_ID&quot;) REFERENCES &quot;Course&quot;(&quot;Course_ID&quot;),
	FOREIGN KEY(&quot;Platform_ID&quot;) REFERENCES &quot;Platform&quot;(&quot;Platform_ID&quot;)
);





------------------------------------------------------


CREATE TRIGGER Course_count
AFTER INSERT ON Course
	BEGIN
		UPDATE Platform SET Course = Course + 1	WHERE Platform_ID= NEW.Platform_ID;
	END;
   
   
 -----------------------------------------------------
 --FOR PICTURES (UNSTR) CREATING TRIGGER -&gt; COURSE_ID &amp; Platform_ID
 
CREATE TRIGGER picture_tab
AFTER INSERT ON Course
	BEGIN
		 INSERT INTO Pictures (Course_ID, Platform_ID) VALUES (NEW.Course_ID, NEW.Platform_ID);
	END;
   
   

 -----------------------------------------------------
 --FOR Review CREATING TRIGGER -&gt; Like/Dislike
 
CREATE TRIGGER dislike_
AFTER INSERT ON Review
	BEGIN
		 UPDATE Review SET Like_Dislike = &quot;Dislike&quot; WHERE Feedback LIKE &quot;%!&quot;;
	END;

CREATE TRIGGER like_
AFTER INSERT ON Review
	BEGIN
		 UPDATE Review SET Like_Dislike = &quot;Like&quot; WHERE Feedback LIKE &quot;%Satisfied%&quot;;
	END;



UPDATE Employers_Users SET Level = &quot;updated-pro&quot; WHERE User_ID = '13549';
	










</sql><current_tab id="0"/></tab_sql></sqlb_project>
